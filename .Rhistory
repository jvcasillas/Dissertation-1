geom_vline(xintercept = 4, lty = 3, size = 0.4) +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.75) +
geom_point(aes(color = corsi), color = "black", size = 1.3, show.legend = F) +
geom_point(aes(color = corsi), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Movement\nanticipation")
library("papaja")
library("officer")
library("flextable")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
source(here::here("scripts", "02_load_data.R"))
source(here::here("scripts", "02_load_data.R"))
source(here::here("scripts", "01_helpers.R"))
# Get path to saved models
gca_mods_path  <- here("mods", "music", "gca")
# Get path to saved models
gca_mods_path  <- here("mods", "music", "gca")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/pitch_mods.Rdata"))
load(paste0(gca_mods_path, "/model_preds.Rdata"))
load(paste0(gca_mods_path, "/model_preds.Rdata"))
load(paste0(gca_mods_path, "/rhythm_mods.Rdata"))
border_1 <- fp_border(width = 1.5)
border_2 <- fp_border(width = 0.75)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
group_by(Group, `Lexical stress`) %>%
filter(., Pitch == max(Pitch) |
Pitch == min(Pitch) |
Pitch == median(Pitch)) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
group_by(Group, `Lexical stress`) %>%
filter(., Pitch == max(Pitch) |
Pitch == min(Pitch) |
Pitch == median(Pitch)) %>%
ungroup() %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
# group_by(Group, `Lexical stress`) %>%
# filter(., Pitch == max(Pitch) |
#          Pitch == min(Pitch) |
#          Pitch == median(Pitch)) %>%
# ungroup() %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
group_by(Group, `Lexical stress`) %>%
filter(., Pitch == max(Pitch) |
Pitch == min(Pitch) ) %>%
ungroup() %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
group_by(Group, `Lexical stress`) %>%
filter(., Pitch == max(Pitch) ) %>%
ungroup() %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev) |
pitch_dev == median(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev) |
pitch_dev == mean(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev) |
median(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Pitch = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Pitch (min, max)` = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress)) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Pitch (min, max)` = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(group) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Pitch (min, max)` = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone"),
group = fct_relevel(group, "SS", 'AE', 'AM', 'IE', 'IM')) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(desc(stress)) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Pitch (min, max)` = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone"),
group = fct_relevel(group, "SS", 'AE', 'AM', 'IE', 'IM')) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress)) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Pitch (min, max)` = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone"),
group = fct_relevel(group, "SS", 'AE', 'AM', 'IE', 'IM')) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Pitch (min, max)` = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_rhythm %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone"),
group = fct_relevel(group, "SS", 'AE', 'AM', 'IE', 'IM')) %>%
group_by(group, stress) %>%
filter(., rhythm_dev == max(rhythm_dev) |
rhythm_dev == min(rhythm_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), rhythm_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Rhythm = rhythm_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
library("papaja")
library("officer")
library("flextable")
model_preds$target_offset_preds %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone"),
group = fct_relevel(group, "SS", 'AE', 'AM', 'IE', 'IM')) %>%
# group_by(group, stress) %>%
# filter(., corsi == max(corsi) |
#          corsi == min(corsi)) %>%
# ungroup() %>%
arrange(group, desc(stress), corsi) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Visual pred.` = motion,
`Visuospatial WM` = corsi, Probability = prob, LB = prob_lb,
UB = prob_ub) %>%
flextable() %>%
padding(padding = 0, part = "all") %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
library("papaja")
library("officer")
library("flextable")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
#source(here::here("scripts", "02_load_data.R"))
source(here::here("scripts", "01_helpers.R"))
#source(here::here("scripts", "02_load_data.R"))
source(here::here("scripts", "01_helpers.R"))
# Get path to saved models
gca_mods_path  <- here("mods", "vision", "gca")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/full_mods.Rdata"))
load(paste0(gca_mods_path, "/model_preds.Rdata"))
#source(here::here("scripts", "02_load_data.R"))
source(here::here("scripts", "01_helpers.R"))
# Get path to saved models
gca_mods_path  <- here("mods", "vision", "gca")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/full_mods.Rdata"))
load(paste0(gca_mods_path, "/model_preds.Rdata"))
load(paste0(gca_mods_path, "/nested_model_comparisons.Rdata"))
border_1 <- fp_border(width = 1.5)
border_2 <- fp_border(width = 0.75)
model_preds$target_offset_preds %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone"),
group = fct_relevel(group, "SS", 'AE', 'AM', 'IE', 'IM')) %>%
# group_by(group, stress) %>%
# filter(., corsi == max(corsi) |
#          corsi == min(corsi)) %>%
# ungroup() %>%
arrange(group, desc(stress), corsi) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Visual pred.` = motion,
`Visuospatial WM` = corsi, Probability = prob, LB = prob_lb,
UB = prob_ub) %>%
flextable() %>%
padding(padding = 0, part = "all") %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
library("papaja")
library("officer")
library("flextable")
# Get path to saved models
gca_mods_path  <- here("mods", "music", "gca")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/pitch_mods.Rdata"))
border_1 <- fp_border(width = 1.5)
border_2 <- fp_border(width = 0.75)
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone"),
group = fct_relevel(group, "SS", 'AE', 'AM', 'IE', 'IM')) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Pitch (min, max)` = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
padding(padding = 0, part = "all") %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
library("papaja")
library("officer")
library("flextable")
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
source(here::here("scripts", "02_load_data.R"))
source(here::here("scripts", "02_load_data.R"))
source(here::here("scripts", "01_helpers.R"))
# Get path to saved models
gca_mods_path  <- here("mods", "music", "gca")
# Get path to saved models
gca_mods_path  <- here("mods", "music", "gca")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/pitch_mods.Rdata"))
load(paste0(gca_mods_path, "/model_preds.Rdata"))
load(paste0(gca_mods_path, "/model_preds.Rdata"))
load(paste0(gca_mods_path, "/rhythm_mods.Rdata"))
model_preds$target_offset_preds_pitch %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone"),
group = fct_relevel(group, "SS", 'AE', 'AM', 'IE', 'IM')) %>%
group_by(group, stress) %>%
filter(., pitch_dev == max(pitch_dev) |
pitch_dev == min(pitch_dev)) %>%
ungroup() %>%
arrange(group, desc(stress), pitch_dev) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Pitch (min, max)` = pitch_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
padding(padding = 0, part = "all") %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
# Get full mod and make it pretty for the table
pretty_fixed_effects_pitch <- pitch_mods$gca_full_mod_pitch_int_2 %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0:3, 1),
paste0(0:3, 2), paste0(0:3, 3),
paste0(0:3, 4), paste0(0:3, 5),
paste0(0:3, 6))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects_pitch$Parameter %<>% paste(., var_labels)
pretty_fixed_effects_pitch %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
pretty_fixed_effects_pitch %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr")) %>%
padding(padding = 0, part = "all") %>%
pretty_fixed_effects_pitch %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr")) %>%
padding(padding = 0, part = "all")
update.packages('rmarkdown')
Error: pandoc document conversion failed with error 83
rmarkdown::render(output_format = "html_document", input = your_vignette, clean = FALSE)
install.packages("rmdfiltr")
warnings()
pretty_fixed_effects_pitch %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"), linestretch = 1)
