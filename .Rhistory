mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "AM") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group AE", "AE - AM")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:3, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# make table for printing
pairwise_comp <- pitch_mods$gca_full_mod_pitch_int_2 %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ims") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:3, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:3, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# make table for printing
pairwise_comp <- pitch_mods$gca_full_mod_pitch_int_2_ies %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ims") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:3, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:3, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- pitch_mods$gca_full_mod_pitch_int_2_ies %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "IM") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group IE", "IE - IM")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:3, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
params <- pitch_mods$gca_full_mod_pitch_int_2 %>%
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:10, 0), paste0(0:10, 1),
paste0(0:10, 2), paste0(0:10, 3),
paste0(0:10, 4), paste0(0:10, 5),
paste0(0:9, 6))
params$subscript <-
c(paste0(0:8, 0), paste0(0:10, 1),
paste0(0:10, 2), paste0(0:10, 3),
paste0(0:10, 4), paste0(0:10, 5),
paste0(0:9, 6))
params$subscript <-
c(paste0(0:8, 0), paste0(0:8, 1),
paste0(0:8, 2), paste0(0:8, 3),
paste0(0:8, 4), paste0(0:8, 5),
paste0(0:8, 6))
params$subscript <-
c(paste0(0:6, 0), paste0(0:6, 1),
paste0(0:6, 2), paste0(0:6, 3),
paste0(0:6, 4), paste0(0:6, 5),
paste0(0:6, 6))
params$subscript <-
c(paste0(0:5, 0), paste0(0:5, 1),
paste0(0:5, 2), paste0(0:5, 3),
paste0(0:5, 4), paste0(0:5, 5),
paste0(0:5, 6))
params$subscript <-
c(paste0(0:5, 0), paste0(0:5, 1),
paste0(0:5, 2), paste0(0:5, 3),
paste0(0:5, 4), paste0(0:4, 5),
paste0(0:4, 6))
params <- tibble::column_to_rownames(params, 'subscript')
params$subscript <-
c(paste0(0:5, 0), paste0(0:5, 1),
paste0(0:5, 2), paste0(0:5, 3),
paste0(0:5, 4), paste0(0:4, 5),
paste0(0:4, 6))
# Shortcut for inline reporting from the above table
report_row <- function(row_name) report_fixef_row(params, row_name)
# Pre-calculate intercept as proportion
b0 <- params$B[params$subscript == "00"] %>% as.numeric
b0_prop <- b0 %>% inv_logit %>% round(2) %>% remove_leading_zero
model_preds$target_offset_preds_rhythm %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
arrange(group, desc(stress)) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, rhythm = rhythm_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_rhythm %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
arrange(group, desc(stress)) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, Rhythm = rhythm_dev,
Probability = prob, LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- rhythm_mods$gca_full_mod_rhythm_int_3 %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0:3, 1),
paste0(0:3, 2), paste0(0:3, 3),
paste0(0:3, 4), paste0(0:3, 5),
paste0(0:3, 6))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
ranef_table <- rhythm_mods$gca_full_mod_rhythm_int_3 %>%
tidy_ranef_summary %>%
# Format the numbers
mutate_each(funs(format_fixef_num), vcov, sdcor) %>%
mutate_each(funs(format_cor), -var1, -grp, -vcov, -sdcor) %>%
sort_ranef_grps %>%
# Format variable names and group names
mutate(var1 = fix_param_names(var1) %>% blank_nas,
grp =  blank_same_as_last(grp) %>% fix_param_names) %>%
rename(Group = grp, Parameter = var1, Variance = vcov, SD = sdcor)
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5:9] <-
c("Correlations", "&nbsp;", " &nbsp;", "  &nbsp;", "  &nbsp;")
ranef_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("llrrrrrr"))
# make table for printing
pairwise_comp <- rhythm_mods$gca_full_mod_rhythm_int_3_aes %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ies") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:3, 8), paste0(0:1, 9))
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:4, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:4, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- rhythm_mods$gca_full_mod_rhythm_int_3_aes %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "IE") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group AA", "AE - IE")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:4, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# make table for printing
pairwise_comp <- rhythm_mods$gca_full_mod_rhythm_int_3_ams %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ims") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:4, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:4, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- rhythm_mods$gca_full_mod_rhythm_int_3_ams %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "IM") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group AM", "AM - IM")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:4, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# make table for printing
pairwise_comp <- rhythm_mods$gca_full_mod_rhythm_int_3_aes %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ams") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:4, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:4, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- rhythm_mods$gca_full_mod_rhythm_int_3_aes %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "AM") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group AE", "AE - AM")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:4, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# make table for printing
pairwise_comp <- rhythm_mods$gca_full_mod_rhythm_int_3_ies %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ims") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:3, 8), paste0(0:1, 9))
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:4, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:4, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- rhythm_mods$gca_full_mod_rhythm_int_3_ies %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "IM") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group IE", "IE - IM")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:4, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
params <- rhythm_mods$gca_full_mod_rhythm_int_3 %>%
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:5, 0), paste0(0:5, 1),
paste0(0:5, 2), paste0(0:5, 3),
paste0(0:5, 4), paste0(0:4, 5),
paste0(0:4, 6))
params$subscript <-
c(paste0(0:5, 0), paste0(0:5, 1),
paste0(0:5, 2), paste0(0:5, 3),
paste0(0:5, 4), paste0(0:5, 5),
paste0(0:5, 6))
params$subscript <-
c(paste0(0:6, 0), paste0(0:6, 1),
paste0(0:5, 2), paste0(0:5, 3),
paste0(0:5, 4), paste0(0:5, 5),
paste0(0:5, 6))
params <- tibble::column_to_rownames(params, 'subscript')
params$subscript <-
c(paste0(0:6, 0), paste0(0:6, 1),
paste0(0:5, 2), paste0(0:5, 3),
paste0(0:5, 4), paste0(0:4, 5),
paste0(0:4, 6))
params$subscript <-
c(paste0(0:6, 0), paste0(0:6, 1),
paste0(0:5, 2), paste0(0:5, 3),
paste0(0:5, 4), paste0(0:5, 5),
paste0(0:5, 6))
# Shortcut for inline reporting from the above table
report_row <- function(row_name) report_fixef_row(params, row_name)
# Pre-calculate intercept as proportion
b0 <- params$B[params$subscript == "00"] %>% as.numeric
b0_prop <- b0 %>% inv_logit %>% round(2) %>% remove_leading_zero
library("papaja")
library("officer")
library("flextable")
# Get path to saved models
gca_mods_path  <- here("mods", "vision", "gca")
# Load models as list and store full mod to global env
load(paste0(gca_mods_path, "/full_mods.Rdata"))
knitr::include_graphics(
here("figs", "vision", "gca", "corsi_gca.png")
)
knitr::include_graphics(
here("figs", "vision", "gca", "car_gca.png")
)
load(paste0(gca_mods_path, "/model_preds.Rdata"))
model_preds$target_offset_preds
model_preds$target_offset_preds %>%
mutate(stress = if_else(stress == 1, "paroxytone", "oxytone")) %>%
arrange(group, desc(stress)) %>%
mutate(group = blank_same_as_last(as.character(group))) %>%
select(Group = group, `Lexical stress` = stress, `Visual pred.` = motion,
`Visuospatial WM` = corsi, Probability = prob, LB = prob_lb,
UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- full_mods$gca_full_mod_int_1 %>%
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0:3, 1),
paste0(0:3, 2), paste0(0:3, 3),
paste0(0:3, 4), paste0(0:3, 5),
paste0(0:3, 6))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
```{r, 'ranef-table', results = "asis"}
ranef_table <- full_mods$gca_full_mod_int_1 %>%
tidy_ranef_summary %>%
# Format the numbers
mutate_each(funs(format_fixef_num), vcov, sdcor) %>%
mutate_each(funs(format_cor), -var1, -grp, -vcov, -sdcor) %>%
sort_ranef_grps %>%
# Format variable names and group names
mutate(var1 = fix_param_names(var1) %>% blank_nas,
grp =  blank_same_as_last(grp) %>% fix_param_names) %>%
rename(Group = grp, Parameter = var1, Variance = vcov, SD = sdcor)
# Correlation columns need names with characters so that pandoc can align them
names(ranef_table)[5:9] <-
c("Correlations", "&nbsp;", " &nbsp;", "  &nbsp;", "  &nbsp;")
ranef_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("llrrrrrr"))
# make table for printing
pairwise_comp <- full_mods$gca_full_mod_int_1_aes %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ies") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:0, 8), paste0(0:1, 9))
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:1, 8), paste0(0:1, 9))
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:2, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:2, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- full_mods$gca_full_mod_int_1_aes %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "IE") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group AA", "AE - IE")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:2, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# make table for printing
pairwise_comp <- full_mods$gca_full_mod_int_1_ams %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ims") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:2, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:2, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- full_mods$gca_full_mod_int_1_ams %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "IM") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group AM", "AM - IM")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:2, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# make table for printing
pairwise_comp <- full_mods$gca_full_mod_int_1_aes %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ams") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:2, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:2, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- full_mods$gca_full_mod_int_1_aes %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "AM") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group AE", "AE - AM")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:2, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# make table for printing
pairwise_comp <- full_mods$gca_full_mod_int_1_ies %>%
tidy_lme4 %>%
rename(B = Estimate) %>%
filter(str_detect(Parameter, "ims") == TRUE)
# Add subscript column, convert to rownames, and then add it again
pairwise_comp$subscript <- c(paste0(0:2, 8), paste0(0:1, 9))
pairwise_comp <- tibble::column_to_rownames(pairwise_comp, 'subscript')
pairwise_comp$subscript <- c(paste0(0:2, 8), paste0(0:1, 9))
# Shortcut for inline reporting from the above table
report_pairwise <- function(row_name) report_fixef_row(pairwise_comp, row_name)
# Make table for appendix
pretty_pairwise_table <- full_mods$gca_full_mod_int_2_ies %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "IM") == TRUE)
# Make table for appendix
pretty_pairwise_table <- full_mods$gca_full_mod_int_1_ies %>%
tidy_lme4 %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p) %>%
filter(str_detect(Parameter, "IM") == TRUE)
pretty_pairwise_table$Parameter %<>% str_replace("Group IE", "IE - IM")
# Include gammas after each parameter name
pw_subs <- c(paste0(0:2, 8), paste0(0:1, 9))
pw_var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", pw_subs, "~"))
pretty_pairwise_table$Parameter %<>% paste(., pw_var_labels)
pretty_pairwise_table %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
params <- full_mods$gca_full_mod_int_1 %>%
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:10, 0), paste0(0:10, 1),
paste0(0:10, 2), paste0(0:10, 3),
paste0(0:10, 4), paste0(0:10, 5),
paste0(0:9, 6))
params$subscript <-
c(paste0(0:8, 0), paste0(0:8, 1),
paste0(0:8, 2), paste0(0:8, 3),
paste0(0:8, 4), paste0(0:8, 5),
paste0(0:8, 6))
params$subscript <-
c(paste0(0:7, 0), paste0(0:7, 1),
paste0(0:7, 2), paste0(0:7, 3),
paste0(0:7, 4), paste0(0:8, 5),
paste0(0:8, 6))
params$subscript <-
c(paste0(0:7, 0), paste0(0:7, 1),
paste0(0:7, 2), paste0(0:7, 3),
paste0(0:7, 4), paste0(0:6, 5),
paste0(0:6, 6))
params$subscript <-
c(paste0(0:7, 0), paste0(0:7, 1),
paste0(0:7, 2), paste0(0:6, 3),
paste0(0:6, 4), paste0(0:6, 5),
paste0(0:6, 6))
params <- tibble::column_to_rownames(params, 'subscript')
params$subscript <-
c(paste0(0:7, 0), paste0(0:7, 1),
paste0(0:7, 2), paste0(0:6, 3),
paste0(0:6, 4), paste0(0:6, 5),
paste0(0:6, 6))
# Shortcut for inline reporting from the above table
report_row <- function(row_name) report_fixef_row(params, row_name)
# Pre-calculate intercept as proportion
b0 <- params$B[params$subscript == "00"] %>% as.numeric
b0_prop <- b0 %>% inv_logit %>% round(2) %>% remove_leading_zero
