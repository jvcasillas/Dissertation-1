fill = Stress, color = Stress, lty = `L2 use`)) +
facet_grid(. ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_color_brewer(palette = "Set1", name = "Condition") +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times")
params <- gca_l2_mods$gca_l2_mod_dele_final %>%
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:5, 0), paste0(0:5, 1),
paste0(0:4, 2))
params <- gca_l2_mods_sum$gca_l2_mod_dele_final %>%
tidy_lme4() %>%
rename(B = Estimate)
params <- gca_l2_mod_dele_final %>% #gca_l2_mods_sum$
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:5, 0), paste0(0:5, 1),
paste0(0:4, 2))
params$subscript <-
c(paste0(0:5, 0), paste0(0:5, 1))
params$subscript <-
c(paste0(0:5, 0), paste0(0:4, 1))
params <- tibble::column_to_rownames(params, 'subscript')
params$subscript <-
c(paste0(0:5, 0), paste0(0:4, 1))
View(params)
target_offset_preds_dele %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit")) %>%
arrange(stress) %>%
group_by(stress) %>%
distinct() %>%
#ungroup() %>%
mutate(
stress = blank_same_as_last(as.character(stress))) %>%
select(`Lexical stress` = stress, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
View(target_offset_preds_dele)
target_offset_preds_dele %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 1, "Mandarin Chinese", "English")) %>%
arrange(l1, stress) %>%
group_by(l1, stress) %>%
distinct() %>%
#ungroup() %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(`Lexical stress` = stress, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
dele_probs <- target_offset_preds_dele %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 1, "Mandarin Chinese", "English")) %>%
arrange(l1, stress) %>%
group_by(l1, stress) %>%
distinct() %>%
#ungroup() %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(`Lexical stress` = stress, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
target_offset_preds_dele %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 1, "Mandarin Chinese", "English")) %>%
arrange(l1, stress) %>%
group_by(l1, stress) %>%
distinct() %>%
#ungroup() %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(`Lexical stress` = stress, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
target_offset_preds_dele %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 1, "Mandarin Chinese", "English")) %>%
arrange(l1, stress) %>%
group_by(l1, stress) %>%
distinct() %>%
#ungroup() %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_mod_dele_final %>%  #gca_l2_mods_sum$
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0:3, 1),
paste0(0:2, 2))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
dele_params <- pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
border_1 <- fp_border(width = 1.5)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_mod_use_final %>%  #gca_l2_mods_sum$
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0:3, 1),
paste0(0:2, 2))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
use_params <- pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
use_prob <- model_preds$target_offset_preds_l2_use %>%
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 'EN', "English", "Mandarin"),
l1 = fct_relevel(l1, "English", "Mandarin")) %>%
group_by(l1, stress) %>%
# filter(., percent_l2_week == max(percent_l2_week) |
#          percent_l2_week == min(percent_l2_week)) %>%
distinct() %>%
# ungroup() %>%
arrange(l1, stress) %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, `Weekly L2 % use` = percent_l2_week, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
model_preds$target_offset_preds_l2_use %>%
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 'EN', "English", "Mandarin"),
l1 = fct_relevel(l1, "English", "Mandarin")) %>%
group_by(l1, stress)
target_offset_preds_l2_use %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 'EN', "English", "Mandarin"),
l1 = fct_relevel(l1, "English", "Mandarin")) %>%
group_by(l1, stress) %>%
# filter(., percent_l2_week == max(percent_l2_week) |
#          percent_l2_week == min(percent_l2_week)) %>%
distinct() %>%
# ungroup() %>%
arrange(l1, stress) %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, `Weekly L2 % use` = percent_l2_week, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
target_offset_preds_use %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 'EN', "English", "Mandarin"),
l1 = fct_relevel(l1, "English", "Mandarin")) %>%
group_by(l1, stress) %>%
# filter(., percent_l2_week == max(percent_l2_week) |
#          percent_l2_week == min(percent_l2_week)) %>%
distinct() %>%
# ungroup() %>%
arrange(l1, stress) %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, `Weekly L2 % use` = percent_l2_week, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
View(target_offset_preds_use)
target_offset_preds_use %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 'EN', "English", "Mandarin"),
l1 = fct_relevel(l1, "English", "Mandarin")) %>%
group_by(l1, stress) %>%
# filter(., percent_l2_week == max(percent_l2_week) |
#          percent_l2_week == min(percent_l2_week)) %>%
distinct() %>%
# ungroup() %>%
arrange(l1, stress) %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, `L2 use` = use, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
target_offset_preds_use %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == -1, "English", "Mandarin"),
l1 = fct_relevel(l1, "English", "Mandarin")) %>%
group_by(l1, stress) %>%
# filter(., percent_l2_week == max(percent_l2_week) |
#          percent_l2_week == min(percent_l2_week)) %>%
distinct() %>%
# ungroup() %>%
arrange(l1, stress) %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, `L2 use` = use, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
use_prob <- target_offset_preds_use %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == -1, "English", "Mandarin Chinese"),
l1 = fct_relevel(l1, "English", "Mandarin Chinese")) %>%
group_by(l1, stress) %>%
# filter(., percent_l2_week == max(percent_l2_week) |
#          percent_l2_week == min(percent_l2_week)) %>%
distinct() %>%
# ungroup() %>%
arrange(l1, stress) %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, `L2 use` = use, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
save_as_docx(dele_prob, dele_params, use_prob, use_params, path = here::here('prob.docx'))
dele_prob <- target_offset_preds_dele %>% #model_preds_sum$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == -1, "English", "Mandarin"),
l1 = fct_relevel(l1, "English", "Mandarin")) %>%
arrange(l1, stress) %>%
group_by(l1, stress) %>%
distinct() %>%
#ungroup() %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, Proficiency = DELE, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
save_as_docx(dele_probs, dele_params, use_prob, use_params, path = here::here('prob.docx'))
target_offset_preds_dele %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit"),
l1 = if_else(l1 == 1, "Mandarin Chinese", "English")) %>%
arrange(l1, stress, DELE) %>%
group_by(l1, stress, DELE) %>%
distinct() %>%
#ungroup() %>%
mutate(l1 = blank_same_as_last(as.character(l1)),
stress = blank_same_as_last(as.character(stress))) %>%
select(L1 = l1, `Lexical stress` = stress, Proficiency = DELE, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_mod_dele_final %>%  #gca_l2_mods_sum$
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0:3, 1),
paste0(0:2, 2))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_mod_use_final %>%  #gca_l2_mods_sum$
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0:3, 1),
paste0(0:2, 2))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
use_params <- pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
target_offset_preds_mon %>% #model_preds$
mutate(stress = if_else(stress == 1, "Present", "Preterit")) %>%
arrange(stress) %>%
group_by(stress) %>%
distinct() %>%
#ungroup() %>%
mutate(
stress = blank_same_as_last(as.character(stress))) %>%
select(`Lexical stress` = stress, Probability = prob,
LB = prob_lb, UB = prob_ub) %>%
flextable() %>%
width(., j = c(2, 3, 4), width = c(1.1, 1.3, 1.1)) %>%
font(., fontname = "Times", part = "all") %>%
fontsize(., size = 11) %>%
border_remove(.) %>%
border(., part = "header",
border.top = border_1,
border.bottom = border_2) %>%
hline_bottom(., part = "body", border = border_1)
params <- gca_l2_mod_dele_final %>% #gca_l2_mods_sum$
tidy_lme4() %>%
rename(B = Estimate)
params <- gca_mod_mon_final %>% #gca_l2_mods_sum$
tidy_lme4() %>%
rename(B = Estimate)
params$subscript <-
c(paste0(0:5, 0), paste0(0:4, 1))
params$subscript <-
c(paste0(0:4, 0))
params$subscript <-
c(paste0(0:3, 0))
params <- tibble::column_to_rownames(params, 'subscript')
params$subscript <-
c(paste0(0:3, 0))
View(params)
# Get full mod and make it pretty for the table
pretty_fixed_effects <- gca_l2_mod_dele_final %>%  #gca_l2_mods_sum$
tidy_lme4() %>%
mutate(p = format_pval(p),
Parameter = fix_param_names(Parameter)) %>%
mutate_each(funs(format_fixef_num), Estimate:t) %>%
rename(`_t_` = t, `_p_` = p)
# Include gammas (Gij) after each parameter name
subs <- c(paste0(0:3, 0), paste0(0:3, 1),
paste0(0:2, 2))
var_labels <- parenthesize(paste0(emphasize("&gamma;"), "~", subs, "~"))
pretty_fixed_effects$Parameter %<>% paste(., var_labels)
pretty_fixed_effects %>%
select(-effect) %>%
knitr::kable(format = "pandoc", align = str_tokenize("lrrrr"))
unique(stress50$cond)
plogis(1.17)
plogis(1.12)
source(here::here("scripts", "00_load_libs.R"))
# Get path to saved models
gca_mods_path <- here("mods", "stress", "gca")
# load(paste0(gca_mods_path, "/model_preds.Rdata"))
load(paste0(gca_mods_path, "/model_preds_l2_sum.Rdata"))
list2env(model_preds, globalenv())
# Set path for saving figs
figs_path <- here("figs", "stress", "gca")
fits_all_l2_dele %>%
mutate(Proficiency = as.factor(DELE_z),
Stress = if_else(condition_sum == 1, "Present", "Past"),
Stress = fct_relevel(Stress, 'Present'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
fill = L1, color = L1, lty = Proficiency)) +
facet_grid(. ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_color_brewer(palette = "Set1", name = "Condition") +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times")
prof_sum_cond <- fits_all_l2_dele %>%
mutate(Proficiency = as.factor(DELE_z),
Stress = if_else(condition_sum == 1, "Present", "Past"),
Stress = fct_relevel(Stress, 'Present'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
fill = L1, color = L1, lty = Proficiency)) +
facet_grid(. ~ Stress) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_color_brewer(palette = "Set1", name = "Condition") +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times") #+ legend_adj_3
fits_all_l2_dele %>%
mutate(Proficiency = as.factor(DELE_z),
Stress = if_else(condition_sum == 1, "Present", "Past"),
Stress = fct_relevel(Stress, 'Present'),
L1 = if_else(l1_sum == 1, "Mandarin Chinese", "English"),
L1 = fct_relevel(L1, "English")) %>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
fill = Stress, color = Stress, lty = Proficiency)) +
facet_grid(. ~ L1) +
geom_hline(yintercept = 0, size = .5, color = "grey40", linetype = 'dotted') +
geom_vline(xintercept = 4, size = .5, color = "grey40", linetype = 'dotted') +
geom_ribbon(alpha = 0.2, color = NA, show.legend = F) +
geom_line(size = 0.35) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
scale_color_brewer(palette = "Set1", name = "Condition") +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_grey(base_size = 10, base_family = "Times")
ggsave(paste0(figs_path, "/prof_sum_cond.png"), prof_sum_cond, width = 150,
height = 120, units = "mm", dpi = 600)
