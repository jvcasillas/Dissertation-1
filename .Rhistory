mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = percent_l2_week)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = percent_l2_week), size = 1.3, show.legend = F) +
geom_point(aes(color = percent_l2_week), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Weekly L2 % use") +
theme(
legend.position = c(0.1, 0.85),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
model_preds$fits_all_l2_dele %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = percent_l2_week)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = percent_l2_week), size = 1.3, show.legend = F) +
geom_point(aes(color = percent_l2_week), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Weekly L2 % use") +
theme(
legend.position = c(0.5, 0.85),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
model_preds$fits_all_l2_dele %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = percent_l2_week)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = percent_l2_week), size = 1.3, show.legend = F) +
geom_point(aes(color = percent_l2_week), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Weekly L2 % use") +
theme(
legend.position = c(0.15, 0.85),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
model_preds$fits_all_l2_dele %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = percent_l2_week)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = percent_l2_week), size = 1.3, show.legend = F) +
geom_point(aes(color = percent_l2_week), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Weekly L2 % use") +
theme(
legend.position = c(0.11, 0.85),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
# Condition and L1 split
stress_use_split <- model_preds$fits_all_l2_dele %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = percent_l2_week)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = percent_l2_week), size = 1.3, show.legend = F) +
geom_point(aes(color = percent_l2_week), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Weekly L2 % use") +
theme(
legend.position = c(0.11, 0.85),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
fill = condition, color = ospan)) +
facet_wrap(l1 ~ .) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
scale_fill_brewer(palette = 'Set1', name = "Tense",
labels = c("Present", "Preterit")) +
theme_big + labs(color = "Verbal WM") +
theme(
legend.position = c(0.1, 0.75),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
# Within group differences
stress_wm_l1 <- model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
fill = condition, color = ospan)) +
facet_wrap(l1 ~ .) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
scale_fill_brewer(palette = 'Set1', name = "Tense",
labels = c("Present", "Preterit")) +
theme_big + labs(color = "Verbal WM") +
theme(
legend.position = c(0.1, 0.75),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
fill = l1, color = ospan)) +
facet_wrap(condition ~ .) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
scale_fill_brewer(palette = 'Set1', name = "L1",
labels = c("EN", "MA")) +
theme_big + labs(color = "Verbal WM") +
theme(
legend.position = c(0.1, 0.75),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
# Within group differences
stress_wm_l1 <- model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
fill = condition, color = ospan)) +
facet_wrap(l1 ~ .) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
scale_fill_brewer(palette = 'Set1', name = "Tense",
labels = c("Present", "Preterit")) +
theme_big + labs(color = "Verbal WM") +
theme(
legend.position = c(0.1, 0.75),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
# Within condition differences
stress_wm_cond <- model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
fill = l1, color = ospan)) +
facet_wrap(condition ~ .) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
scale_fill_brewer(palette = 'Set1', name = "L1",
labels = c("EN", "MA")) +
theme_big + labs(color = "Verbal WM") +
theme(
legend.position = c(0.1, 0.75),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = ospan)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + legend_adj + labs(color = "Verbal WM")
model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = ospan)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Verbal WM") +
theme(
legend.position = c(0.1, 0.75),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = ospan)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Verbal WM") +
theme(
legend.position = c(0.1, 0.85),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
# Condition and L1 split
stress_wm_split <- model_preds$fits_all_l2_wm %>%
mutate(condition = if_else(condition_sum == 1, "Present", "Preterit"),
condition = fct_relevel(condition, "Present"),
l1 = if_else(l1 == 'en', 'English', 'Mandarin'),
l1 = fct_relevel(l1, "English", "Mandarin"))%>%
ggplot(., aes(x = time_zero, y = fit, ymax = ymax, ymin = ymin,
color = ospan)) +
facet_grid(condition ~ l1) +
geom_hline(yintercept = 0, lty = 3, size = 0.4) +
geom_vline(xintercept = 4, lty = 3, size = 0.4) +
stat_summary(fun.y = "mean", geom = "line", size = 1) +
# geom_ribbon(alpha = 0.2, color = "grey", show.legend = F) +
stat_summary(fun.data = mean_cl_boot, geom = 'ribbon',fun.args=list(conf.int=0.95),
alpha = 0.5) +
geom_point(aes(color = ospan), size = 1.3, show.legend = F) +
geom_point(aes(color = ospan), size = 0.85, show.legend = F) +
scale_x_continuous(breaks = c(-4, 0, 4, 8, 12),
labels = c("-200", "0", "200", "400", "600")) +
labs(x = "Time (ms) relative to target syllable offset",
y = "Empirical logit of looks to target") +
theme_big + labs(color = "Verbal WM") +
theme(
legend.position = c(0.1, 0.85),
legend.key = element_blank(),
legend.background = element_blank(),
strip.background = element_blank(),
axis.title.y = element_text(size = rel(.9), hjust = 0.95),
axis.title.x = element_text(size = rel(.9)),
legend.key.size = unit(0.75, 'lines'),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
plot.margin = unit(rep(2, 4), "mm"),
panel.grid.major = element_line(colour = 'grey90', size = 0.15),
panel.grid.minor = element_line(colour = 'grey90', size = 0.15)
)
ggsave(paste0(figs_path, "/stress_dele_l1.png"), stress_dele_l1, width = 150,
height = 120, units = "mm", dpi = 600)
# Set path for saving figs
figs_path <- here("figs", "stress", "gca")
ggsave(paste0(figs_path, "/stress_dele_l1.png"), stress_dele_l1, width = 150,
height = 120, units = "mm", dpi = 600)
ggsave(paste0(figs_path, "/stress_dele_split.png"), stress_dele_split, width = 150,
height = 120, units = "mm", dpi = 600)
ggsave(paste0(figs_path, "/stress_use_cond.png"), stress_use_cond, width = 150,
height = 120, units = "mm", dpi = 600)
ggsave(paste0(figs_path, "/stress_dele_cond.png"), stress_dele_cond, width = 150,
height = 120, units = "mm", dpi = 600)
ggsave(paste0(figs_path, "/stress_wm_l1.png"), stress_wm_l1, width = 150,
height = 120, units = "mm", dpi = 600)
ggsave(paste0(figs_path, "/stress_wm_split.png"), stress_wm_split, width = 150,
height = 120, units = "mm", dpi = 600)
ggsave(paste0(figs_path, "/stress_use_l1.png"), stress_use_l1, width = 150,
height = 120, units = "mm", dpi = 600)
ggsave(paste0(figs_path, "/stress_use_split.png"), stress_use_split, width = 150,
height = 120, units = "mm", dpi = 600)
ggsave(paste0(figs_path, "/stress_wm_cond.png"), stress_wm_cond, width = 150,
height = 120, units = "mm", dpi = 600)
